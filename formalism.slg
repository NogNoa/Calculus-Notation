/*Set Theory*/
prim <set>
prim <object>
prim \in
syn {<object> \in  <set>}
def {\nin; {<object> a, <set> A; a \nin A \iff \not(a \in A)}}
syn {a=b: a,b \is <object>}
def {=; {<set> A, B; {A=B \iff (\all a:a \in A;a \in B) \and (\all b:b \in b;b \in A)}}}
def {<set> \emp;{\all <object> x; x \nin \emp}}
def {\sbst; {<set> A, B; {A \sbst B \than (\all a:a \in A; a \in B)}}}
form {{ <set> {<object>:<statment> S} } ?= <set> A:(\all x:S;x \in A)} 
def {\union; {<set> A,B; A \union B = {x: (x \in A) \or (x \in B)}}}
def {\isect; {<set> A,B; A \isect B = {x: (x \in A) \and (x \in B)}}}
def {<disjoint>; (A <disjoint> B) \iff (A \isect B = \emp)}
def {~; ~A = {x:x \nin A}}
def {\\; A \\ B = A \isect ~B}

/*From Sets to Numbers*/
syn {|<set>|}
prim \inf
def {<set> \NN; \NN = {|A|:true} \\ {\inf:true}}
form {<set> A <object> a ?= a:a \in A}
syn {(a, b): a, b \is <object>}
def {\times; {<set> A, B; A \times B = {(a, b): a \in A \and b \in B}}}
def {<set> <relation>; {<relation> R, <object> x,y \in A; {xRy \iff (x,y) \in R)}}}
def {<set> <operation>; {<operation> F, <object> x,y; xFy \is <object>}}
def {<relation> \on; { <relation> R, <set> A; R \on A \iff R \sbst (A \times A)}}
def {<relation> \on; { <operation> F, <set> A; F \on A \if (\all x,y \in A; \exist(xFy: xFy \in A))}} 
def {<set> <comotative>; {<operation> F \in <comotative> \iff (\all <object> x,y; xFy=yFx)}}
def {<set> <associative>; {<operation> F \in <associative> \iff (\all <object> x,y,z; (xFy)Fz=xF(yFz))}}

/* Numbers */
def {<operation> +; + \on \NN \and + \in <comotative> \and + \in <associative>}
def {\NN 0; \all \NN n; n+0=n}
def {<set> \ZZ; {\all y: y \in (\NN \union \ZZ); {\exist_1 x:x \in \ZZ \and x+y=0}}}

prv {\NN \sbst \ZZ |
	{	prv { {\all n: n \in \NN; n \in \ZZ} |
			{	n \in \NN \trfr 
				n \in (\NN \union \ZZ)\trfr 
				\exist_1 \ZZ m: n+m=0 \trfr 
				\exist_1 \ZZ s: s+m=0 \trfr 
				s=n \trfr 
				n \in \ZZ 
			}
		} \trfr 
		\NN \sbst \ZZ
	}
}

def {<operation> *; * \on \ZZ \and * \in <comotative> \and + \in <associative>}
def {\NN 1; \all \NN n; n*1=n}
def {<set> \QQ; {\all y: y \in (\ZZ \union \QQ); {\exist_1 x:x \in \QQ \and x*y=1}}}
prv {\all r \in QQ; {\exist (\ZZ p, q: q*r=p)
form{p/q:(p,q \in \ZZ) ?= \QQ r:q*r=p}
prv {\ZZ \sbst \QQ}
prv {+ \on \QQ}
prv {* \on \QQ}
def {<reduced-fraction> (p, q): p,q \in \ZZ \and \nexist (x:p/x \in \ZZ \and q/x \in \ZZ)}
prv {r:r*r=2; r \nin \QQ|
	{	r\in \QQ \and
	prv {r;exist <reduced-fraction> (p/q):p/q=r|
			{	\nexist <reduced-fraction> (p/q):p/q=r \trfr
				r =p/q;\not <reduced-fraction> (p/q) \trfr
				\all x;r =(p/x)/(q/x): \ZZ p/x,q/x \and
				prv {p/x \nin \ZZ|
					{	x>p \and x>0 \trfr
						1 > p/x \and -1 \< -p/x
						\and (p/x \neq 0 \if r \neq 0) 
					}
				}
				false
			}
		} \trfr
			r*r=(p*p)/(q*q)=2 \trfr
			(p*p)=2*q*q \trfr
			{	p/2=(q*q/p)=(q/r) \and
				{let q/r \in \NN \trfr \exist 2:p/2 \in \ZZ} 
			} \trfr
			2*(q/r)*2*(q/r)=2*q*q \trfr
			2*(q/r)*(q/r)=p*p \trfr
			2*q*q
	...
}
def {<set> \RR: +,* \on \RR}
syn {P(n): <statment> P, \NN n}
let {P(0) \and ((\all \NN n; P(n)) \than P(n+1)) \than (\all \NN n; P(n))}
